version: "3.7"
services:
  mongodb:
    image: mongo:6.0.6
    container_name: 'mongo'
    restart: always
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend_services

  order-service:
    image: congzhao0294/order-service:latest
    container_name: 'order-service'
    restart: always
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://order-service:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - ORDER_QUEUE_HOSTNAME
      - ORDER_QUEUE_PORT
      - ORDER_QUEUE_USERNAME
      - ORDER_QUEUE_PASSWORD
      - ORDER_QUEUE_TRANSPORT
      - ORDER_QUEUE_RECONNECT_LIMIT
      - ORDER_QUEUE_NAME
    networks:
      - backend_services

  makeline-service:
    image: congzhao0294/makeline-service:latest 
    container_name: 'makeline-service'
    restart: always
    ports:
      - 3001:3001
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://makeline-service:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - ORDER_QUEUE_URI
      - ORDER_QUEUE_LISTENER_USERNAME
      - ORDER_QUEUE_LISTENER_PASSWORD
      - ORDER_QUEUE_NAME
      - ORDER_QUEUE_TRANSPORT
    networks:
      - backend_services
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
  virtual-customer:
    image: congzhao0294/virtual-customer:latest
    container_name: 'virtual-customer'
    restart: always
    environment:
      - ORDER_SERVICE_URL=http://order-service:3000/
      - ORDERS_PER_HOUR=3600
    networks:
      - backend_services
    depends_on:
      order-service:
        condition: service_healthy
networks:
  backend_services:
    driver: bridge